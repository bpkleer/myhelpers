---
title: 'Your title'
subtitle: 'Conference / Panel name'
author: 'Philipp Kleer'
institute: 'Programa de Pós-Graduação | Universidade Federal de Pernambuco'
date: last_modified
categories: ['cat1', 'cat2', 'cat3', 'cat4']
summary: 'Write a short description'
bibliography: assets/lit.bib
csl: assets/apa.csl
# Settings
format: 
  html: default
  typst: default
format-links:
  - html
  - format: typst
    text: PDF
    icon: file-pdf
---

```{r}
#| label: setup-libraries-data
#| include: false
#| message: false
library(tidyverse)
library(knitr)
library(kableExtra)
library(RColorBrewer)
library(scales)
library(beyonce)
```

::: {.social}

[Link to publication: {{< ai doi size=2x >}}](https://doi.org/)

[Link to supplementary material: {{< ai osf size=2x >}}](https://osf.io/)

[{{< fa brands mastodon >}}](https://polsci.social/@philk){.mastodon} [{{< fa brands bluesky >}}](https://bsky.app/profile/phil-k.bsky.social){.bluesky} [{{< iconify simple-icons gitlab >}}](https://gitlab.com/bpkleer){.gitlab} [{{< fa brands github >}}](https://github.com/bpkleer){.github} [{{< ai orcid >}}](https://orcid.org/0000-0003-1935-387X){.orcid} [{{< ai lattes >}}](http://lattes.cnpq.br/4785970328498860){.lattes} [{{< fa envelope >}}](mailto:philipp.kleer+contact@posteo.com){.email} [{{< fa id-card >}} ](https://bpkleer.github.io/en){.website}
:::

# Section 1
You need to add extensions manually if you want to use standards of this template: 

- `quarto install extension sellorm/quarto-social-embeds`
- `quarto install extension schochastics/academicons`
- `quarto add martinomagnifico/quarto-simplemenu`
- `quarto add mcanouil/quarto-iconify`
- `quarto add quarto-ext/fontawesome`
- `quarto install extension jmbuhr/quarto-qrcode`


## Create multiple output
To create pdf and html in the same time, use bash:
```bash
quarto render <filename>.qmd
```

## Create JupyterNotebook 
The following code creates automatically a jupyter notebook.

```bash
quarto convert <filename>.qmd
```

## Create variables
You can upfront create variables that can be used in the following

```{python}
#| tags: [parameters]

name = 'Philipp'
data_filter = '2012'
```

The fun part is that with this tag of `[parameters]` you can use it, when you render:
```bash
quarto render <filename>.qmd -P name:Benedikt
```

To change yaml input in bash:
```bash
quarto render <filename>.qmd -M title:"My first test"
```

## Specific exclusion
For example, `plotly` does not work in typst, therefore we can exclude it and include `seaborn` instead if typst

```markdown
:::{.content-visible when-format="html"}
\`\`\`{python}
import plotly.express as px

{some plotly express}

:::

:::{.content-visible when-format="typst"}
\`\`\`{python}
import seaborn as sns

{some other seaborn plot}

:::

```

## landscape mode for typst

```markdown
::: {.landscape}

### Subsection 1

This will appear in landscape.

:::
```

### Sub Tables

```{r}
#| label: tbl-example
#| tbl-cap: I want these images to be interpreted as Tables.
#| tbl-subcap:
#|   - This is the subcaption for the first subtable
#|   - This is the subcaption for the second subtable
plot(1:10)
plot(11:20)
```

### Subsubsection 2
```{python}
#| echo: false
#| label: a-cell
import matplotlib.pyplot as plt
plt.plot([1,2,3])
```

::: callout-note
## Note the following plot

{{< contents a-cell >}}

:::
